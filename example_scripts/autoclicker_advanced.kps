[!!
[!K1:=F1!][!K2:=F2!][!K3:=F3!][!K4:=F4!][[!EA0:=\e[1;31m!]][[!EA1:=\e[1;32m!]]
!!]
init,l,click_mdelay=100;
init,l,MDelayMin=10; #So the macro doesn't lag.
init,l,MDelayMax=1000;
init,i,click_on=0;
init,l,click_count=0;
init,d,exp_inc=1; #Increases the longer keys are held.
debug,debug_print_type=0; #Disable any debug printing.
debug,rpn_stack_debug=0;
print=This macro can can autoclick the left mouse button up to 10 milliseconds and 1000 milliseconds.
The autoclicker can also be enabled/disabled at will.
Press [!EA0!][!K3!]\e[0m/[!EA1!][!K4!]\e[0m to enable/disable autoclick. \
Hold [!K1!]/[!K2!] to adjust delay. \
Turn off autoclicker when holding [!K1!]/[!K2!].\n\n\n\n;; #Next println has escape codes that go backwards by 3.
grab_key=[!K1!];grab_key=[!K2!];grab_key=[!K3!];grab_key=[!K4!];
(A;
print=\e[4F\e[0JMouse click delay \(milliseconds): (click_mdelay)
AutoclickEnabled;;
?eval=(click_on)?
JT>AC1;println=[!EA0!] (click_on)\e[0m;;JT>AC0;
JF>AC1;println=[!EA1!] (click_on)\e[0m;;JF>AC0;
println=ExpDelayGrowth (exp_inc)
MouseClickCount (click_count);;
?key_pressed=[!K4!]?edit,click_on=(1);
?key_pressed=[!K3!]?edit,click_on=(0);
?key_pressed=[!K1!]?edit,click_mdelay=(click_mdelay,exp_inc,-,MDelayMin,max);
?key_pressed=[!K2!]?edit,click_mdelay=(click_mdelay,exp_inc,+,MDelayMax,min);
edit,exp_inc=(exp_inc,1.2,*,1000,min);
?!key_pressed=[!K1!]??!key_pressed=[!K2!]?edit,exp_inc=(1); #Reset to 0 if none pressed.
?eval=(click_on)?m1=c;
edit,click_count=(click_on,click_count,++,0,b?t:f);
.m(click_on,click_mdelay,100,b?t:f);
)A;